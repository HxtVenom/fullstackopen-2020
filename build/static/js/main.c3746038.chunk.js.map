{"version":3,"sources":["services/phone.js","index.js"],"names":["url","axios","get","then","response","data","newPerson","post","id","delete","put","Form","props","onSubmit","handleSubmit","value","newName","onChange","handleName","newNumber","handleNumber","type","Filter","search","handleSearch","Persons","persons","filter","map","person","key","name","number","onClick","handleDelete","Notification","style","message","App","useState","setPersons","setNewName","newPhone","setNewPhone","setNewSearch","errorMessage","setErrorMessage","setNewStyle","useEffect","phoneService","result","errorStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","successStyle","alreadyRemoved","setTimeout","event","target","preventDefault","length","window","confirm","oldPerson","find","n","changedPerson","catch","error","concat","includes","str","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3746038.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst url = \"/api/persons\"\n\nconst getAll = () => {\n    const request = axios.get(url)\n\n    return request.then(response => response.data)\n}\n\nconst add = newPerson => {\n    const request = axios.post(url, newPerson)\n\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    const request = axios.delete(`${url}/${id}`)\n\n    return request.then(response => response.data)\n}\n\nconst update = (id, newPerson) => {\n    const request = axios.put(`${url}/${id}`, newPerson)\n\n    return request.then(response => response.data)\n}\n\nexport default {getAll, add, remove, update}","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\n\nimport phoneService from './services/phone';\n\nconst Form = (props) => {\n\n  return (\n    <>\n    <form onSubmit={props.handleSubmit}>\n      <div>name: <input value={props.newName} onChange={props.handleName}/></div>\n      <div>number: <input value={props.newNumber} onChange={props.handleNumber}/></div>\n      <div><button type=\"submit\">Add</button></div>\n    </form>\n    </>\n  )\n}\n\nconst Filter = (props) => {\n  return(\n    <div>Search: <input value={props.search} onChange={props.handleSearch}/></div>\n  )\n}\n\nconst Persons = (props) => {\n  return (\n    <div>\n      {props.persons\n        .filter(props.search)\n          .map(person => {\n            return (\n              <div key={person.id}>\n                <p>{person.name} {person.number}</p>\n                <button onClick={() => props.handleDelete(person.id)}>delete</button>\n              </div>\n            )\n            }\n          )\n        }\n    </div>\n  )\n}\n\nconst Notification = (props) => {\n  return (\n    <div style={props.style}>\n      {props.message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newPhone, setNewPhone] = useState('')\n  const [search, setNewSearch] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [style, setNewStyle] = useState()\n\n  const fetch = () => {\n    phoneService\n      .getAll()\n      .then(result => setPersons(result))\n  }\n\n  useEffect(fetch, [])\n\n  const errorStyle = {\n    color: 'red',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n\n  const successStyle = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n\n  const alreadyRemoved = (id) => {\n    setErrorMessage(\n      `Informations about '${persons.filter(person => person.id !== id).name}' was already removed from server`\n    )\n    setNewStyle(errorStyle)\n    setTimeout(() => {\n      setErrorMessage(null)\n      setNewStyle(null)\n    }, 5000)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handlePhoneChange = (event) => {\n    setNewPhone(event.target.value)\n  }\n\n  const handleSearch = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n  const searchFun = (person) => {\n    return person.name.includes(search)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    if(persons.filter(person => person.name === newName).length > 0){\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n        const oldPerson = persons.find(n => n.name === newName)\n        const changedPerson = {...oldPerson, number: newPhone}\n\n        phoneService\n          .update(oldPerson.id, changedPerson)\n          .then(result => {\n            setPersons(persons.map(person => person.id !== result.id ? person : result))\n\n            setErrorMessage(`Number for ${oldPerson.name} updated.`)\n            setNewStyle(successStyle)\n            setTimeout(() => {\n              setErrorMessage(null)\n      \n              setNewStyle(null)\n            }, 5000)\n          })\n          .catch(error => {\n            alreadyRemoved(oldPerson.id)\n            setPersons(persons.filter(person => person.id !== oldPerson.id))\n          })\n      }\n    }else{\n      const newPerson = { name: newName, number: newPhone}\n      \n      phoneService\n        .add(newPerson)\n        .then(result => setPersons(persons.concat(result)))\n\n        setErrorMessage(`${newPerson.name} added to phonebook.`)\n        setNewStyle(successStyle)\n        setTimeout(() => {\n          setErrorMessage(null)\n          setNewStyle(null)\n        }, 5000)\n    }\n\n    setNewPhone('')\n    setNewName('')\n  }\n\n  const removePerson = (id) => {\n    const str = `Delete ${persons.find(n => n.id === id).name} ?`\n    if(window.confirm(str)){\n      phoneService\n        .remove(id)\n        .then(response => {\n          setPersons(persons.filter(person => person.id !== id))\n        })\n        .catch(error => {\n          alreadyRemoved(id)\n          setPersons(persons.filter(person => person.id !== id))\n        })\n    }\n  }\n\n  return(\n    <div>\n      <h1>Phonebook</h1>\n      <Notification style={style} message={errorMessage}/>\n      <Filter search={search} handleSearch={handleSearch}/>\n      <h3>Add New Contact</h3>\n      <Form newName={newName} handleSubmit={addPerson} handleName={handleNameChange} newNumber={newPhone} handleNumber={handlePhoneChange}/>\n      <h2>Numbers</h2>\n      <Persons search={searchFun} persons={persons} handleDelete={removePerson}/>\n    </div>\n  )\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}